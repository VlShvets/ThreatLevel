#ifndef TRACK
#define TRACK

#include <QPointF>

namespace ThreatLevel
{

/// Структура параметров трасс
struct Track
{
    /// Априорные параметры
    bool        initIsBG;               /// Признак БЦ
    QPointF     initFinalPos;           /// Координаты конечной точки
    int         initQuant;              /// Количественный состав (для КР: может принимать значения 1 - 15)

    /// Точные значения текущих параметров
    QPointF     exactPos;               /// Точные значения текущих координат трассы

    /// Параметры измерения с погрешностью
    float       measCourse;             /// Текущий измеренный курс с погрешностью      (в радианах)
    float       measSpeed;              /// Текущая измеренная скорость с погрешностью  (в м/c)

    /// Параметры траектории с учетом текущих измерений
    QPointF     startPos;               /// Координаты начальной точки траектории
    QPointF     finalPos;               /// Координаты конечной точки экстраполированной траектории

    /// Рекуррентные параметры сглаживания
    float       smoothVx;               /// Сглаженная проекция вектора скорости на ось абсцисс
    float       smoothVy;               /// Сглаженная проекция вектора скорости на ось ординат

    /// Инициируемые при идентификации с ЗКВ параметры
    int         numArea;                /// Номер ЗКВ (-1 - ни с каким ЗКВ трасса не идентифицированна)
    float       startDist;              /// Расстояние от начальной точки траектории до центра ЗКВ
    float       startTime;              /// Время движения от начальной точки траектории до центра ЗКВ

    /// Пересчитываемые связанные с ЗКВ параметры
    float       angCourseToPA;          /// Угол между направлением курса и направлением от начальной точки траектории до центра ЗКВ
    float       distToPA;               /// Расстояние от проекции текущей точки траектории до центра ЗКВ
    float       timeToPA;               /// Время движения от проекции текущей точки траектории до центра ЗКВ

    /// --------------------------------------------------
    /// Результирующие параметры по конкретной трассе
    /// --------------------------------------------------

    /// СКО времени движения до ЗКВ
    int         countMeas;              /// Количество измерений
    float       diffTime;               /// Разность вычисленного и измеренного времени движения до ЗКВ
    float       sumDiffTime;            /// Сумма квадратов разности времени движения до ЗКВ
    float       rmsDiffTime;            /// Среднеквадратическое отклонение времени движения до ЗКВ

    /// --------------------------------------------------
    /// Результирующие параметры по всем трассам
    /// --------------------------------------------------

    /// Трасса с минимальным временем поражения ЗКВ
    static int  numTrackMinErrTime;     /// Номер трассы с минимальным временем поражения ЗКВ

    /// --------------------------------------------------
    /// Константы
    /// --------------------------------------------------

    /// Тратиловый эквивалент баллистической цели
    static const int    BG_WEIGHT_COEF  = 25;       /// Весовой коэффициент тратилового эквивалента БЦ

    /// Минимально возможное значение скорости
    static constexpr float  MIN_SPEED       = 180.0;    /// Минимальное значение скорости

    /// Максимально возможное значение скорости
    static constexpr float  MAX_SPEED       = 250.0;    /// Максимальное значение скорости
};

}

#endif // TRACK

